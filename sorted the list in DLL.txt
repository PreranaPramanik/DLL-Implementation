#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node* prev;
    struct node* next;
} *head;

void create_DLL(int n);
void sort_list();
void display();

int main() {
    int n;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    create_DLL(n);
    
    printf("Elements in the DLL are:\n");
    display();

    printf("Sorting the list...\n");
    sort_list();

    printf("Sorted list:\n");
    display();
    
    return 0;
}

void create_DLL(int n) {
    struct node* newnode, * temp;
    int data, i;
    head = NULL; // Initialize head to NULL
    for (i = 0; i < n; i++) {
        printf("Enter data for node %d: ", i + 1);
        scanf("%d", &data);

        newnode = (struct node*)malloc(sizeof(struct node));
        if (newnode == NULL) {
            printf("Unable to allocate memory\n");
            break;
        }

        newnode->data = data;
        newnode->prev = NULL;
        newnode->next = NULL;

        if (head == NULL) {
            head = newnode;
            temp = head;
        }
        else {
            temp->next = newnode;
            newnode->prev = temp;
            temp = newnode;
        }
    }
    printf("Doubly linked list created successfully\n");
}

void sort_list() {
    struct node *current, *index;
    int temp;
    if (head == NULL) {
        return;
    }
    else {
        for (current = head; current != NULL; current = current->next) {
            for (index = current->next; index != NULL; index = index->next) {
                if (current->data > index->data) {
                    temp = current->data;
                    current->data = index->data;
                    index->data = temp;
                }
            }
        }
    }
}

void display() {
    struct node* temp = head;
    if (head == NULL)
        printf("List is empty\n");
    else {
        while (temp != NULL) {
            printf("Data = %d\n", temp->data);
            temp = temp->next;
        }
        printf("\n");
    }
}